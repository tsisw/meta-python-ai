From 8db30810a1fe3f66cb0ce40015984ff6ab9f7954 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20B=C3=B6sz=C3=B6rm=C3=A9nyi?=
 <zboszor@gmail.com>
Date: Sun, 12 Mar 2023 12:37:30 +0100
Subject: [PATCH 2/2] Pass presence and version of ffmpeg via envvar
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Zoltán Böszörményi <zboszor@gmail.com>
Upstream-Status: Inappropriate [Yocto specific]
---
 setup.py | 21 +++++----------------
 1 file changed, 5 insertions(+), 16 deletions(-)

diff --git a/setup.py b/setup.py
index f1f54505d5..db2c667a92 100644
--- a/setup.py
+++ b/setup.py
@@ -338,35 +338,24 @@ def get_extensions():
     )
 
     # Locating ffmpeg
-    ffmpeg_exe = shutil.which("ffmpeg")
-    has_ffmpeg = ffmpeg_exe is not None
-    ffmpeg_version = None
+    has_ffmpeg = True
+    ffmpeg_root = os.getenv("FFMPEG_ROOT")
+    ffmpeg_version = os.getenv("FFMPEG_VERSION")
     # FIXME: Building torchvision with ffmpeg on MacOS or with Python 3.9
     # FIXME: causes crash. See the following GitHub issues for more details.
     # FIXME: https://github.com/pytorch/pytorch/issues/65000
     # FIXME: https://github.com/pytorch/vision/issues/3367
-    if sys.platform != "linux" or (sys.version_info.major == 3 and sys.version_info.minor == 9):
-        has_ffmpeg = False
-    if has_ffmpeg:
-        try:
-            # This is to check if ffmpeg is installed properly.
-            ffmpeg_version = subprocess.check_output(["ffmpeg", "-version"])
-        except subprocess.CalledProcessError:
-            print("Building torchvision without ffmpeg support")
-            print("  Error fetching ffmpeg version, ignoring ffmpeg.")
-            has_ffmpeg = False
 
     use_ffmpeg = use_ffmpeg and has_ffmpeg
 
     if use_ffmpeg:
         ffmpeg_libraries = {"libavcodec", "libavformat", "libavutil", "libswresample", "libswscale"}
 
-        ffmpeg_bin = os.path.dirname(ffmpeg_exe)
-        ffmpeg_root = os.path.dirname(ffmpeg_bin)
         ffmpeg_include_dir = os.path.join(ffmpeg_root, "include")
         ffmpeg_library_dir = os.path.join(ffmpeg_root, "lib")
 
-        gcc = os.environ.get("CC", shutil.which("gcc"))
+        gcccmd = os.environ.get("CC")
+        gcc = gcccmd.split()[0]
         platform_tag = subprocess.run([gcc, "-print-multiarch"], stdout=subprocess.PIPE)
         platform_tag = platform_tag.stdout.strip().decode("utf-8")
 
-- 
2.39.2

