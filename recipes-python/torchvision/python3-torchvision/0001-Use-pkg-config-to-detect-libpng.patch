From 5e0b31331c39828d0a398519c6ba41c4ce21becf Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20B=C3=B6sz=C3=B6rm=C3=A9nyi?=
 <zboszor@gmail.com>
Date: Sun, 12 Mar 2023 12:34:00 +0100
Subject: [PATCH 1/2] Use pkg-config to detect libpng
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Zoltán Böszörményi <zboszor@gmail.com>
Upstream-Status: Inappropriate [Yocto specific]
---
 setup.py | 58 ++++++++++++++++++++------------------------------------
 1 file changed, 21 insertions(+), 37 deletions(-)

diff --git a/setup.py b/setup.py
index 24b7a2edb9..f1f54505d5 100644
--- a/setup.py
+++ b/setup.py
@@ -254,45 +254,29 @@ def get_extensions():
     image_link_flags = []
 
     # Locating libPNG
-    libpng = shutil.which("libpng-config")
-    pngfix = shutil.which("pngfix")
-    png_found = libpng is not None or pngfix is not None
-
-    use_png = use_png and png_found
-    if use_png:
-        print("Found PNG library")
-        if libpng is not None:
-            # Linux / Mac
-            min_version = "1.6.0"
-            png_version = subprocess.run([libpng, "--version"], stdout=subprocess.PIPE)
-            png_version = png_version.stdout.strip().decode("utf-8")
-            png_version = parse_version(png_version)
-            if png_version >= parse_version(min_version):
-                print("Building torchvision with PNG image support")
-                png_lib = subprocess.run([libpng, "--libdir"], stdout=subprocess.PIPE)
-                png_lib = png_lib.stdout.strip().decode("utf-8")
-                if "disabled" not in png_lib:
-                    image_library += [png_lib]
-                png_include = subprocess.run([libpng, "--I_opts"], stdout=subprocess.PIPE)
-                png_include = png_include.stdout.strip().decode("utf-8")
-                _, png_include = png_include.split("-I")
-                image_include += [png_include]
-                image_link_flags.append("png")
-                print(f"  libpng version: {png_version}")
-                print(f"  libpng include path: {png_include}")
-            else:
-                print("Could not add PNG image support to torchvision:")
-                print(f"  libpng minimum version {min_version}, found {png_version}")
-                use_png = False
-        else:
-            # Windows
-            png_lib = os.path.join(os.path.dirname(os.path.dirname(pngfix)), "lib")
-            png_include = os.path.join(os.path.dirname(os.path.dirname(pngfix)), "include", "libpng16")
+    pkgconf = shutil.which("pkg-config")
+
+    # Linux / Mac
+    png_version = subprocess.run([pkgconf, "--modversion", "libpng"], stdout=subprocess.PIPE)
+    png_version = png_version.stdout.strip().decode("utf-8")
+    print(f"libpng version: {png_version}")
+    png_version = parse_version(png_version)
+    if png_version >= parse_version("1.6.0"):
+        print("Building torchvision with PNG image support")
+        png_lib = subprocess.run([pkgconf, "--libdir", "libpng"], stdout=subprocess.PIPE)
+        png_lib = png_lib.stdout.strip().decode("utf-8")
+        if "disabled" not in png_lib:
             image_library += [png_lib]
-            image_include += [png_include]
-            image_link_flags.append("libpng")
+        png_include = subprocess.run([pkgconf, "--cflags-only-I", "libpng"], stdout=subprocess.PIPE)
+        png_include = png_include.stdout.strip().decode("utf-8")
+        _, png_include = png_include.split("-I")
+        print(f"libpng include path: {png_include}")
+        image_include += [png_include]
+        image_link_flags.append("png")
+        use_png = True
     else:
-        print("Building torchvision without PNG image support")
+        print("libpng installed version is less than 1.6.0, disabling PNG support")
+        use_png = False
     image_macros += [("PNG_FOUND", str(int(use_png)))]
 
     # Locating libjpeg
-- 
2.39.2

